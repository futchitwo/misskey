# This is a basic workflow to help you get started with Actions

name: Gigalixir-cli CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ gigalixir-cli ]
  schedule:
    # *はYAMLにおける特殊文字なので、この文字列はクオートしなければならない
    - cron:  '0 0 1,16 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Install gigalixir-cli
        run: |
          sudo apt update
          sudo apt install -y python-pip git
          pip install gigalixir
        
      - name: Login gigalixir
        run: |
          gigalixir login -e ${{ secrets.GIGALIXIR_EMAIL_NOT_ESCAPED }} -y -p ${{ secrets.GIGALIXIR_PASSWORD }}
          gigalixir git:remote f2misskey
          
      - name: Create default.yml
        run: echo -e ${{ secrets.GIGALIXIR_DEFAULT_YML }} > .config/default.yml
      
      - name: git push gigalixir
        run: git push -f gigalixir HEAD:refs/heads/gigalixir
